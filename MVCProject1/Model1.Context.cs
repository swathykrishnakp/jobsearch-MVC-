//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCProject1
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MVCProjectEntities : DbContext
    {
        public MVCProjectEntities()
            : base("name=MVCProjectEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<App_Tab> App_Tab { get; set; }
        public virtual DbSet<Job_Tab> Job_Tab { get; set; }
        public virtual DbSet<Login_Tab> Login_Tab { get; set; }
        public virtual DbSet<UserReg_Tab> UserReg_Tab { get; set; }
        public virtual DbSet<UserReg_Tab1> UserReg_Tab1 { get; set; }
        public virtual DbSet<CompanyReg_Tab1> CompanyReg_Tab1 { get; set; }
        public virtual DbSet<Admin_Tab> Admin_Tab { get; set; }
        public virtual DbSet<Job_Tab1> Job_Tab1 { get; set; }
        public virtual DbSet<Job_Table> Job_Table { get; set; }
        public virtual DbSet<App_Tab1> App_Tab1 { get; set; }
        public virtual DbSet<App_Tab2> App_Tab2 { get; set; }
    
        public virtual int sp_companyReg(Nullable<int> cid, string cname, string caddr, string cphoto, string cweb, string cemail, string cloc)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var cnameParameter = cname != null ?
                new ObjectParameter("cname", cname) :
                new ObjectParameter("cname", typeof(string));
    
            var caddrParameter = caddr != null ?
                new ObjectParameter("caddr", caddr) :
                new ObjectParameter("caddr", typeof(string));
    
            var cphotoParameter = cphoto != null ?
                new ObjectParameter("cphoto", cphoto) :
                new ObjectParameter("cphoto", typeof(string));
    
            var cwebParameter = cweb != null ?
                new ObjectParameter("cweb", cweb) :
                new ObjectParameter("cweb", typeof(string));
    
            var cemailParameter = cemail != null ?
                new ObjectParameter("cemail", cemail) :
                new ObjectParameter("cemail", typeof(string));
    
            var clocParameter = cloc != null ?
                new ObjectParameter("cloc", cloc) :
                new ObjectParameter("cloc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_companyReg", cidParameter, cnameParameter, caddrParameter, cphotoParameter, cwebParameter, cemailParameter, clocParameter);
        }
    
        public virtual int sp_loginsert(Nullable<int> rid, string una, string pw, string utype)
        {
            var ridParameter = rid.HasValue ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(int));
    
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwParameter = pw != null ?
                new ObjectParameter("pw", pw) :
                new ObjectParameter("pw", typeof(string));
    
            var utypeParameter = utype != null ?
                new ObjectParameter("utype", utype) :
                new ObjectParameter("utype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_loginsert", ridParameter, unaParameter, pwParameter, utypeParameter);
        }
    
        public virtual int sp_userReg(Nullable<int> uid, string uname, Nullable<int> uage, string uadd, string uemail, string uphone, string photo, string uqual, Nullable<int> uexp, string uskills, string uresume)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var unameParameter = uname != null ?
                new ObjectParameter("uname", uname) :
                new ObjectParameter("uname", typeof(string));
    
            var uageParameter = uage.HasValue ?
                new ObjectParameter("uage", uage) :
                new ObjectParameter("uage", typeof(int));
    
            var uaddParameter = uadd != null ?
                new ObjectParameter("uadd", uadd) :
                new ObjectParameter("uadd", typeof(string));
    
            var uemailParameter = uemail != null ?
                new ObjectParameter("uemail", uemail) :
                new ObjectParameter("uemail", typeof(string));
    
            var uphoneParameter = uphone != null ?
                new ObjectParameter("uphone", uphone) :
                new ObjectParameter("uphone", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(string));
    
            var uqualParameter = uqual != null ?
                new ObjectParameter("uqual", uqual) :
                new ObjectParameter("uqual", typeof(string));
    
            var uexpParameter = uexp.HasValue ?
                new ObjectParameter("uexp", uexp) :
                new ObjectParameter("uexp", typeof(int));
    
            var uskillsParameter = uskills != null ?
                new ObjectParameter("uskills", uskills) :
                new ObjectParameter("uskills", typeof(string));
    
            var uresumeParameter = uresume != null ?
                new ObjectParameter("uresume", uresume) :
                new ObjectParameter("uresume", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_userReg", uidParameter, unameParameter, uageParameter, uaddParameter, uemailParameter, uphoneParameter, photoParameter, uqualParameter, uexpParameter, uskillsParameter, uresumeParameter);
        }
    
        public virtual int sp_companyRegistration(Nullable<int> cid, string cname, string caddr, string cphone, string cweb, string cemail, string cloc)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var cnameParameter = cname != null ?
                new ObjectParameter("cname", cname) :
                new ObjectParameter("cname", typeof(string));
    
            var caddrParameter = caddr != null ?
                new ObjectParameter("caddr", caddr) :
                new ObjectParameter("caddr", typeof(string));
    
            var cphoneParameter = cphone != null ?
                new ObjectParameter("cphone", cphone) :
                new ObjectParameter("cphone", typeof(string));
    
            var cwebParameter = cweb != null ?
                new ObjectParameter("cweb", cweb) :
                new ObjectParameter("cweb", typeof(string));
    
            var cemailParameter = cemail != null ?
                new ObjectParameter("cemail", cemail) :
                new ObjectParameter("cemail", typeof(string));
    
            var clocParameter = cloc != null ?
                new ObjectParameter("cloc", cloc) :
                new ObjectParameter("cloc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_companyRegistration", cidParameter, cnameParameter, caddrParameter, cphoneParameter, cwebParameter, cemailParameter, clocParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_MaxIdLogin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_MaxIdLogin");
        }
    
        public virtual int sp_adminReg(Nullable<int> aid, string ana, string aaddr, string phone, string aemail)
        {
            var aidParameter = aid.HasValue ?
                new ObjectParameter("aid", aid) :
                new ObjectParameter("aid", typeof(int));
    
            var anaParameter = ana != null ?
                new ObjectParameter("ana", ana) :
                new ObjectParameter("ana", typeof(string));
    
            var aaddrParameter = aaddr != null ?
                new ObjectParameter("aaddr", aaddr) :
                new ObjectParameter("aaddr", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var aemailParameter = aemail != null ?
                new ObjectParameter("aemail", aemail) :
                new ObjectParameter("aemail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_adminReg", aidParameter, anaParameter, aaddrParameter, phoneParameter, aemailParameter);
        }
    
        public virtual int sp_login(string una, string pwd, ObjectParameter status)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_login", unaParameter, pwdParameter, status);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_loginId(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_loginId", unaParameter, pwdParameter);
        }
    
        public virtual ObjectResult<string> sp_loginType(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_loginType", unaParameter, pwdParameter);
        }
    
        public virtual int sp_insertcompany(Nullable<int> cid, string cname, string caddr, string cphone, string cweb, string cemail, string cloc)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var cnameParameter = cname != null ?
                new ObjectParameter("cname", cname) :
                new ObjectParameter("cname", typeof(string));
    
            var caddrParameter = caddr != null ?
                new ObjectParameter("caddr", caddr) :
                new ObjectParameter("caddr", typeof(string));
    
            var cphoneParameter = cphone != null ?
                new ObjectParameter("cphone", cphone) :
                new ObjectParameter("cphone", typeof(string));
    
            var cwebParameter = cweb != null ?
                new ObjectParameter("cweb", cweb) :
                new ObjectParameter("cweb", typeof(string));
    
            var cemailParameter = cemail != null ?
                new ObjectParameter("cemail", cemail) :
                new ObjectParameter("cemail", typeof(string));
    
            var clocParameter = cloc != null ?
                new ObjectParameter("cloc", cloc) :
                new ObjectParameter("cloc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertcompany", cidParameter, cnameParameter, caddrParameter, cphoneParameter, cwebParameter, cemailParameter, clocParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_MaxIdCompany()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_MaxIdCompany");
        }
    
        public virtual int sp_insertjob(Nullable<int> cid, string jtitle, string jexp, string jskills, Nullable<int> jvacc, string ldate, string jstatus)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var jtitleParameter = jtitle != null ?
                new ObjectParameter("jtitle", jtitle) :
                new ObjectParameter("jtitle", typeof(string));
    
            var jexpParameter = jexp != null ?
                new ObjectParameter("jexp", jexp) :
                new ObjectParameter("jexp", typeof(string));
    
            var jskillsParameter = jskills != null ?
                new ObjectParameter("jskills", jskills) :
                new ObjectParameter("jskills", typeof(string));
    
            var jvaccParameter = jvacc.HasValue ?
                new ObjectParameter("jvacc", jvacc) :
                new ObjectParameter("jvacc", typeof(int));
    
            var ldateParameter = ldate != null ?
                new ObjectParameter("ldate", ldate) :
                new ObjectParameter("ldate", typeof(string));
    
            var jstatusParameter = jstatus != null ?
                new ObjectParameter("jstatus", jstatus) :
                new ObjectParameter("jstatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertjob", cidParameter, jtitleParameter, jexpParameter, jskillsParameter, jvaccParameter, ldateParameter, jstatusParameter);
        }
    
        public virtual int sp_jobsearches(string qry)
        {
            var qryParameter = qry != null ?
                new ObjectParameter("qry", qry) :
                new ObjectParameter("qry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_jobsearches", qryParameter);
        }
    
        public virtual int sp_AppInsert(Nullable<int> uid, Nullable<int> cid, Nullable<int> jid, string cv, string adate, string status)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var jidParameter = jid.HasValue ?
                new ObjectParameter("jid", jid) :
                new ObjectParameter("jid", typeof(int));
    
            var cvParameter = cv != null ?
                new ObjectParameter("cv", cv) :
                new ObjectParameter("cv", typeof(string));
    
            var adateParameter = adate != null ?
                new ObjectParameter("adate", adate) :
                new ObjectParameter("adate", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AppInsert", uidParameter, cidParameter, jidParameter, cvParameter, adateParameter, statusParameter);
        }
    
        public virtual int sp_InsertApp(Nullable<int> uid, Nullable<int> cid, Nullable<int> jid, string cv, string adate, string status)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var jidParameter = jid.HasValue ?
                new ObjectParameter("jid", jid) :
                new ObjectParameter("jid", typeof(int));
    
            var cvParameter = cv != null ?
                new ObjectParameter("cv", cv) :
                new ObjectParameter("cv", typeof(string));
    
            var adateParameter = adate != null ?
                new ObjectParameter("adate", adate) :
                new ObjectParameter("adate", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertApp", uidParameter, cidParameter, jidParameter, cvParameter, adateParameter, statusParameter);
        }
    }
}
